/*
* Copyright (C) 2009 JavaRosa
*
* Licensed under the Apache License, Version 2.0 (the "License"); you may not
* use this file except in compliance with the License. You may obtain a copy of
* the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
* WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
* License for the specific language governing permissions and limitations under
* the License.
*/
using System;
using Externalizable = org.javarosa.core.util.externalizable.Externalizable;
namespace org.javarosa.core.model.data
{
	
	/// <summary> An IAnswerData object represents an answer to a question
	/// posed to a user.
	/// 
	/// IAnswerData objects should never in any circumstances contain
	/// a null data value. In cases of empty or non-existent responses,
	/// the IAnswerData reference should itself be null.
	/// 
	/// </summary>
	/// <author>  Drew Roos
	/// 
	/// </author>
	public interface IAnswerData:Externalizable
	{
		//UPGRADE_NOTE: Respective javadoc comments were merged.  It should be changed in order to comply with .NET documentation conventions. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1199'"
		/// <returns> The value of this answer, will never
		/// be null
		/// </returns>
		/// <param name="o">the value of this answerdata object. Cannot be null.
		/// Null Data will not overwrite existing values.
		/// </param>
		/// <throws>  NullPointerException if o is null </throws>
		System.Object Value
		{
			get;
			//will never be null
			
			set;
			//can't be null
			
		}
		/// <returns> Gets a string representation of this 
		/// answer
		/// </returns>
		System.String DisplayText
		{
			get;
			
		}
		
		//UPGRADE_ISSUE: The equivalent in .NET for method 'java.lang.Object.clone' returns a different type. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1224'"
		new System.Object clone();
		
		/// <summary> Data types can be uncast if they are expected to be used 
		/// in different contexts. This allows, for instance, select
		/// values to be generated by casting other types or vic-a-versa.
		/// 
		/// </summary>
		/// <returns> An uncast representation of this answer which can
		/// be used in a different context. 
		/// </returns>
		UncastData uncast();
		
		/// <summary> Casts the provided data into this data type.
		/// 
		/// </summary>
		/// <param name="data">An uncast data value which is compatible
		/// with this data type
		/// </param>
		/// <returns>  An instance of the instance's data type 
		/// which contains that value
		/// </returns>
		/// <throws>  IllegalArgumentException If the uncast data is </throws>
		/// <summary> not in a compatible format 
		/// </summary>
		IAnswerData cast(UncastData data);
	}
}